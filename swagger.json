{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "My User Project CRUD",
        "description": "My User Project Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user in system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{id}/edit": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Edit a user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to find",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to edit",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Edited user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/users/{id}/delete": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to remove",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Remove user by Id",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User is delete"
                    }
                }
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of user that we want to find",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get user by Id",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "get user success"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all task in system",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create new task in system",
                "parameters": [
                    {
                        "name": "task",
                        "in": "body",
                        "description": "Task that we want to create",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New task is created",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/edit": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Edit a taks",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "ID of task that we want to find",
                        "type": "string"
                    },
                    {
                        "name": "task",
                        "in": "body",
                        "description": "Task that we want to edit",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Edited user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of task that we want to remove",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Remove task by Id",
                "tags": [
                    "Tasks"
                ],
                "responses": {
                    "200": {
                        "description": "Task is delete"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "required": [
                "name",
                "email"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                },
                "__v": {
                    "type": "string"
                }
            }
        },
        "Task": {
            "required": [
                "taskName",
                "isDone"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "taskName": {
                    "type": "string"
                },
                "isDone": {
                    "type": "boolean"
                },
                "date": {
                    "type": "date"
                },
                "__v": {
                    "type": "string"
                }
            }
        }
    }
}